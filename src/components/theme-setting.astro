<div class="theme-container">
  <button id="theme-toggle" class="theme-button" aria-label="테마 변경">
    <span class="icon light">☀️</span>
    <span class="icon dark">🌙</span>
  </button>
</div>

<style>
  .theme-container {
    background: var(--default-bg-color);
    padding: 0.5rem;
    border-radius: 3rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .theme-button {
    background: transparent;
    border: none;
    border-radius: 2rem;
    padding: 0.5rem 1.25rem;
    font-weight: 500;
    font-size: 0.875rem;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    color: var(--default-text-color);
  }

  .theme-button:hover {
    background: var(--default-text-color);
    color: var(--default-bg-color);
  }

  .icon {
    font-size: 1rem;
    line-height: 1;
  }

  /* 라이트/다크 모드에 따라 아이콘 표시 */
  .icon.light {
    display: none;
  }

  .icon.dark {
    display: inline-block;
  }

  html[data-theme="dark"] .icon.light {
    display: inline-block;
  }

  html[data-theme="dark"] .icon.dark {
    display: none;
  }

  /* 포커스 효과 */
  .theme-button:focus-visible {
    outline: 2px solid var(--default-text-color);
    outline-offset: 2px;
  }

  @media (max-width: 768px) {
    .theme-button {
      padding: 0.5rem 1rem;
      font-size: 0.75rem;
    }

    .icon {
      font-size: 0.875rem;
    }
  }
</style>

<script>
  import { getTheme, saveTheme } from "@/utils/theme";

  const themeToggle = document.getElementById(
    "theme-toggle",
  ) as HTMLButtonElement;

  themeToggle?.addEventListener("click", () => {
    const currentTheme = getTheme();
    const newTheme = currentTheme === "light" ? "dark" : "light";
    saveTheme(newTheme);
  });

  themeToggle?.addEventListener("keydown", (e) => {
    if (e.key === " " || e.key === "Enter") {
      e.preventDefault();
      themeToggle.click();
    }
  });
</script>
