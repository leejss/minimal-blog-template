<div class="theme-container">
  <button id="theme-toggle" class="theme-button" aria-label="테마 변경">
    <div class="icon-container">
      <svg
        class="icon light"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
      >
        <path
          d="M12 18C8.68629 18 6 15.3137 6 12C6 8.68629 8.68629 6 12 6C15.3137 6 18 8.68629 18 12C18 15.3137 15.3137 18 12 18ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16ZM11 1H13V4H11V1ZM11 20H13V23H11V20ZM3.51472 4.92893L4.92893 3.51472L7.05025 5.63604L5.63604 7.05025L3.51472 4.92893ZM16.9497 18.364L18.364 16.9497L20.4853 19.0711L19.0711 20.4853L16.9497 18.364ZM19.0711 3.51472L20.4853 4.92893L18.364 7.05025L16.9497 5.63604L19.0711 3.51472ZM5.63604 16.9497L7.05025 18.364L4.92893 20.4853L3.51472 19.0711L5.63604 16.9497ZM23 11V13H20V11H23ZM4 11V13H1V11H4Z"
        ></path>
      </svg>
      <svg
        class="icon dark"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
      >
        <path
          d="M10 6C10 10.4183 13.5817 14 18 14C19.4386 14 20.7885 13.6203 21.9549 12.9556C21.4438 18.0297 17.1858 22 12 22C6.47715 22 2 17.5228 2 12C2 6.81418 5.97029 2.5562 11.0444 2.04507C10.3797 3.21152 10 4.56142 10 6ZM4 12C4 16.4183 7.58172 20 12 20C14.9654 20 17.5757 18.3788 18.9571 15.9546C18.6407 15.9848 18.3214 16 18 16C12.4772 16 8 11.5228 8 6C8 5.67863 8.01524 5.35933 8.04536 5.04293C5.62119 6.42426 4 9.03458 4 12Z"
        ></path>
      </svg>
    </div>
  </button>
</div>

<style>
  .theme-container {
    position: relative;
    background: transparent;
    height: 2.5rem;
    width: 2.5rem;
    border-radius: 50%;
    overflow: hidden;
  }

  .theme-button {
    position: relative;
    width: 100%;
    height: 100%;
    background: transparent;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .icon-container {
    position: relative;
    width: 1.5rem;
    height: 1.5rem;
  }

  .icon {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: var(--default-text-color);
    transition:
      transform 0.5s ease,
      opacity 0.5s ease;
  }

  .icon.light {
    opacity: 0;
    transform: translateY(100%) rotate(-45deg);
  }

  .icon.dark {
    opacity: 1;
    transform: translateY(0) rotate(0);
  }

  html[data-theme="dark"] .icon.light {
    opacity: 1;
    transform: translateY(0) rotate(0);
  }

  html[data-theme="dark"] .icon.dark {
    opacity: 0;
    transform: translateY(-100%) rotate(45deg);
  }

  .theme-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(var(--text-color-rgb), 0.1);
    border-radius: 50%;
    transform: scale(0);
    transition: transform 0.3s ease;
  }

  .theme-button:hover::before {
    transform: scale(1);
  }

  .theme-button:active {
    transform: scale(0.9);
  }

  .theme-button:focus-visible {
    outline: 2px solid var(--default-text-color);
    outline-offset: 2px;
  }

  @media (max-width: 768px) {
    .theme-container {
      height: 2.25rem;
      width: 2.25rem;
    }

    .icon-container {
      width: 1.25rem;
      height: 1.25rem;
    }
  }
</style>

<script>
  import { getTheme, saveTheme } from "@/utils/theme";

  const themeToggle = document.getElementById(
    "theme-toggle",
  ) as HTMLButtonElement;

  themeToggle?.addEventListener("click", (event) => {
    const currentTheme = getTheme();
    const newTheme = currentTheme === "light" ? "dark" : "light";
    saveTheme(newTheme);
  });

  themeToggle?.addEventListener("keydown", (e) => {
    if (e.key === " " || e.key === "Enter") {
      e.preventDefault();
      themeToggle.click();
    }
  });
</script>
